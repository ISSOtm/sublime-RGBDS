%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: 'Linker script'
file_extensions:
  - link
scope: source.linkerscript

contexts:
  prototype:
    - include: comment

  comment:
    - match: ';'
      scope: punctuation.definition.comment.linkerscript
      push:
        - meta_scope: comment.line.linkerscript
        - meta_include_prototype: false
        - match: (?=\n)
          pop: true


  main:
    - include: bank
    - include: directive
    - include: section

  bank:
    - match: '\b(?i:ROM0|WRAM0|OAM|HRAM)\b'
      scope: storage.type.linkerscript
      push:
        - expect-eol
        - maybe-floating
    - match: '\b(?i:ROMX|[VS]RAM|WRAMX)\b'
      scope: storage.type.linkerscript
      push:
        - expect-eol
        - expect-number-or-floating

  directive:
    - match: '\b(?i:INCLUDE)\b'
      scope: keyword.import.linkerscript
      push:
        - eol-pop
        - expect-string
    - match: '\b(?i:FLOATING)\b'
      scope: storage.type.linkerscript
      push: expect-eol
    - match: '\b(?i:ORG)\b'
      scope: keyword.control.flow.goto.linkerscript
      push:
        - expect-eol
        - expect-number
    - match: '\b(?i:ALIGN)\b'
      scope: keyword.control.flow.linkerscript
      push:
        - expect-eol
        - optional-comma-number
        - expect-number
    - match: '\b(?i:DS)\b'
      scope: keyword.other.linkerscript
      push:
        - expect-eol
        - expect-number

  section:
    - match: '(?=")'
      push:
        - expect-eol
        - maybe-optional
        - string

  maybe-optional:
    - match: '\b(?i:OPTIONAL)\b'
      scope: storage.modifier.linkerscript
      pop: true
    - include: else-pop

  expect-number-or-floating:
    - include: number
    - include: maybe-floating
  maybe-floating:
    - match: '\b(?i:FLOATING)\b'
      scope: storage.modifier.linkerscript
      pop: true
    - include: else-pop


  optional-comma-number:
    - match: ','
      scope: punctuation.separator.linkerscript
      set: expect-number
    - include: else-pop

  expect-string:
    - include: string
    - include: eol-pop
  string:
    - match: '"'
      scope: punctuation.definition.string.begin.linkerscript
      set:
        - meta_include_prototype: false
        - meta_scope: string.quoted.double.linkerscript
        - match: '"'
          scope: punctuation.definition.string.end.linkerscript
          pop: true
        - include: eol-pop

  expect-number:
    - include: number
    - include: eol-pop
  number:
    - match: '[0-9]+'
      scope: constant.numeric.integer.decimal.linkerscript
      pop: true
    - match: '\$[0-9a-fA-F]+'
      scope: constant.numeric.integer.hexadecimal.linkerscript
      pop: true
    - match: '%[01]+'
      scope: constant.numeric.integer.binary.linkerscript
      pop: true


  else-pop:
    - match: '(?=\S)'
      pop: true
    - include: eol-pop

  eol-pop:
    - match: '$\n?'
      pop: true

  expect-eol:
    - match: '[^\s;]+'
      scope: invalid.illegal.linkerscript
    - include: eol-pop
