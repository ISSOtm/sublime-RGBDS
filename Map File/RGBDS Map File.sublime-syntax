%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - map
scope: source.rgbds-map

variables:
  symbol_char: '[a-zA-Z0-9_\\@#]'
  symbol_name: '(?:{{symbol_char}}+(?:\.{{symbol_char}}+)?(?!{{symbol_char}}))'

contexts:
  main:
    - match: '^\s*(SUMMARY)(:)\s*$'
      captures:
        1: keyword.other.rgbds-map
        2: punctuation.terminator.rgbds-map
    - match: '^\s*(ROM0|ROMX|VRAM|SRAM|WRAM0|WRAMX|OAM|HRAM)(:)\s*(\d+) bytes? used (/) (\d+) free(?: in (\d+) banks)?\s*$'
      captures:
        1: keyword.other.bank-type.rgbds-map
        2: punctuation.separator.key-value.rgbds-map
        3: constant.numeric.integer.decimal.used.rgbds-map
        4: punctuation.separator.sequence.rgbds-map
        5: constant.numeric.integer.decimal.free.rgbds-map
        6: constant.numeric.integer.decimal.nb-banks.rgbds-map
    - match: '^\s*(ROM0|ROMX|VRAM|SRAM|WRAM0|WRAMX|OAM|HRAM) bank \#([0-9]+)(:)\s*$'
      scope: entity.name.bank.rgbds-map
      captures:
        1: keyword.other.bank-type.rgbds-map
        2: constant.numeric.integer.decimal.bank-number.rgbds-map
        3: punctuation.terminator.rgbds-map
    - match: '^\s*(SECTION)(:) (\$[0-9A-Fa-f]+) \((0) bytes?\) \[(\".*\")\]\s*$'
      captures:
        1: keyword.other.section.rgbds-map
        2: punctuation.separator.key-value.rgbds-map
        3: constant.numeric.integer.hexadecimal.section-addr.rgbds-map
        4: constant.numeric.integer.decimal.section-size.rgbds-map
        5: entity.name.section.rgbds-map
    - match: '^\s*(SECTION)(:) (\$[0-9A-Fa-f]+)-(\$[0-9A-Fa-f]+) \((\$[0-9A-Fa-f]+) bytes?\) \[(\".*\")\]\s*$'
      captures:
        1: keyword.other.section.rgbds-map
        2: punctuation.separator.key-value.rgbds-map
        3: constant.numeric.integer.hexadecimal.section-start.rgbds-map
        4: constant.numeric.integer.hexadecimal.section-end.rgbds-map
        5: constant.numeric.integer.hexadecimal.section-size.rgbds-map
        6: entity.name.section.rgbds-map
    - match: '^\s*(\$[0-9A-Fa-f]+)\s*(=)\s*({{symbol_name}})\s*$'
      captures:
        1: constant.numeric.integer.hexadecimal.sym-addr.rgbds-map
        2: punctuation.definition.symbol.rgbds-map
        3: entity.name.symbol.rgbds-map
    - match: '^\s*(SLACK)(:) (\$[0-9A-Fa-f]+) bytes?\s*$'
      scope: meta.annotation.slack.rgbds-map
      captures:
        1: keyword.other.slack.rgbds-map
        2: punctuation.separator.key-value.rgbds-map
        3: constant.numeric.integer.hexadecimal.slack.rgbds-map
    - match: '^\s*(EMPTY)(?:(:) (\$[0-9A-Fa-f]+)-(\$[0-9A-Fa-f]+) \((\$[0-9A-Fa-f]+) bytes?\))?\s*$'
      scope: meta.annotation.empty.rgbds-map
      captures:
        1: keyword.other.empty.rgbds-map
        2: punctuation.separator.key-value.rgbds-map
        3: constant.numeric.integer.hexadecimal.empty-start.rgbds-map
        4: constant.numeric.integer.hexadecimal.empty-end.rgbds-map
        5: constant.numeric.integer.hexadecimal.empty-size.rgbds-map
    - match: '^\s*(TOTAL EMPTY)(:) (\$[0-9A-Fa-f]+) bytes?\s*$'
      scope: meta.annotation.total-empty.rgbds-map
      captures:
        1: keyword.other.total-empty.rgbds-map
        2: punctuation.separator.key-value.rgbds-map
        3: constant.numeric.integer.hexadecimal.total-empty.rgbds-map
    - match: .+
      scope: invalid.illegal.rgbds-map

  section:
    - match: (?=\S)
      pop: true
